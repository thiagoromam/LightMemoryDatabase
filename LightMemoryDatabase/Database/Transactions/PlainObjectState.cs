using System;
using System.Collections.Generic;
using System.Linq;
using LightMemoryDatabase.Api;
using LightMemoryDatabase.Serialization;
using LightMemoryDatabase.Util;

namespace LightMemoryDatabase.Database.Transactions
{
    public class PlainObjectState
    {
        private static readonly AutoGeneratedDictionary<Type, List<JsonFieldInfo>> AllFields;

        static PlainObjectState()
        {
            AllFields = new AutoGeneratedDictionary<Type, List<JsonFieldInfo>>(JsonFieldInfo.GetByType);
        }

        private readonly Type _type;
        private readonly IPlainObject _plainObject;
        private readonly List<PlainObjectStateValue> _stateValues;

        public PlainObjectState(IPlainObject plainObject)
        {
            _type = plainObject.GetType();
            _plainObject = plainObject;
            _stateValues = GetInitialState();
        }

        private List<PlainObjectStateValue> GetInitialState()
        {
            return AllFields[_type].Select(f => new PlainObjectStateValue(f, _plainObject)).ToList();
        }

        public bool HasChanges()
        {
            return _stateValues.Any(s => s.HasChanged);
        }

        public void Restore()
        {
            foreach (var stateValue in _stateValues)
                stateValue.Restore();
        }
    }
}